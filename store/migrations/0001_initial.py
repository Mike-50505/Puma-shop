# Generated by Django 5.1.7 on 2025-04-02 22:10

import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='correo electrónico')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Producto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(help_text='Ingrese el nombre del producto (máx. 100 caracteres)', max_length=100, verbose_name='Nombre del producto')),
                ('descripcion', models.TextField(help_text='Descripción detallada del producto', verbose_name='Descripción')),
                ('precio', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Precio normal')),
                ('imagen', models.ImageField(blank=True, help_text='Suba una imagen atractiva del producto', null=True, upload_to='productos/%Y/%m/%d/', verbose_name='Imagen del producto')),
                ('stock', models.PositiveIntegerField(default=0, verbose_name='Cantidad en inventario')),
                ('categoria', models.CharField(blank=True, help_text='Ej: Calzado, Ropa, Accesorios', max_length=50, verbose_name='Categoría')),
                ('oferta', models.BooleanField(default=False, verbose_name='¿Está en oferta?')),
                ('precio_oferta', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Precio promocional')),
                ('slug', models.SlugField(blank=True, help_text='Se genera automáticamente', max_length=255, unique=True, verbose_name='URL amigable')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de creación')),
                ('ultima_actualizacion', models.DateTimeField(auto_now=True, verbose_name='Última actualización')),
            ],
            options={
                'verbose_name': 'Producto',
                'verbose_name_plural': 'Productos',
                'ordering': ['-fecha_creacion'],
                'indexes': [models.Index(fields=['nombre', 'categoria'], name='store_produ_nombre_a4cdf2_idx'), models.Index(fields=['slug'], name='slug_idx')],
            },
        ),
    ]
